<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="commata::basic_stored_value&lt;char,*&gt;">
    <AlternativeType Name="commata::basic_stored_value&lt;char const,*&gt;" />
    <DisplayString>{begin_,s}</DisplayString>
    <StringView>begin_,s</StringView>
  </Type>
  <Type Name="commata::basic_stored_value&lt;wchar_t,*&gt;">
    <AlternativeType Name="commata::basic_stored_value&lt;wchar_t const,*&gt;" />
    <DisplayString>{begin_,su}</DisplayString>
    <StringView>begin_,su</StringView>
  </Type>
  <Type Name="commata::replace_if_skipped&lt;*&gt;">
    <DisplayString Condition="store_.mode_ == commata::detail::scanner::replace_mode::fail">fail</DisplayString>
    <DisplayString Condition="store_.mode_ == commata::detail::scanner::replace_mode::ignore">ignore</DisplayString>
    <DisplayString>copy: {*((value_type*)(&amp;store_.value_))}</DisplayString>
    <Expand>
      <Item Name="[value]" Condition="store_.mode_ == commata::detail::scanner::replace_mode::replace">*((value_type*)(&amp;store_.value_))</Item>
    </Expand>
  </Type>
  <Type Name="commata::replace_if_conversion_failed&lt;*&gt;">
    <DisplayString>{{size = {size}}}</DisplayString>
    <Expand>
      <Synthetic Name="[Empty]">
        <DisplayString Condition="(store_.has_ &amp; 1) != 0">copy: {*((value_type*) (store_.replacements_ + 0))}</DisplayString>
        <DisplayString Condition="(store_.skips_ &amp; 1) != 0">ignore</DisplayString>
        <DisplayString>fail</DisplayString>
        <Expand>
          <Item Name="[value]" Condition="(store_.has_ &amp; 1) != 0">*((value_type*) (store_.replacements_ + 0))</Item>
        </Expand>
      </Synthetic>
      <Synthetic Name="[InvalidFormat]">
        <DisplayString Condition="(store_.has_ &amp; 2) != 0">copy: {*((value_type*) (store_.replacements_ + 1))}</DisplayString>
        <DisplayString Condition="(store_.skips_ &amp; 2) != 0">ignore</DisplayString>
        <DisplayString>fail</DisplayString>
        <Expand>
          <Item Name="[value]" Condition="(store_.has_ &amp; 2) != 0">*((value_type*) (store_.replacements_ + 1))</Item>
        </Expand>
      </Synthetic>
      <Synthetic Name="[AboveUpperLimit]">
        <DisplayString Condition="(store_.has_ &amp; 4) != 0">copy: {*((value_type*) (store_.replacements_ + 2))}</DisplayString>
        <DisplayString Condition="(store_.skips_ &amp; 4) != 0">ignore</DisplayString>
        <DisplayString>fail</DisplayString>
        <Expand>
          <Item Name="[value]" Condition="(store_.has_ &amp; 4) != 0">*((value_type*) (store_.replacements_ + 2))</Item>
        </Expand>
      </Synthetic>
      <Synthetic Name="[BelowLowerLimit]" Condition="size > 3">
        <DisplayString Condition="(store_.has_ &amp; 8) != 0">copy: {*((value_type*) (store_.replacements_ + 3))}</DisplayString>
        <DisplayString Condition="(store_.skips_ &amp; 8) != 0">ignore</DisplayString>
        <DisplayString>fail</DisplayString>
        <Expand>
          <Item Name="[value]" Condition="(store_.has_ &amp; 8) != 0">*((value_type*) (store_.replacements_ + 3))</Item>
        </Expand>
      </Synthetic>
      <Synthetic Name="[Underflow]" Condition="size > 4">
        <DisplayString Condition="(store_.has_ &amp; 16) != 0">copy: {*((value_type*) (store_.replacements_ + 4))}</DisplayString>
        <DisplayString Condition="(store_.skips_ &amp; 16) != 0">ignore</DisplayString>
        <DisplayString>fail</DisplayString>
        <Expand>
          <Item Name="[value]" Condition="(store_.has_ &amp; 16) != 0">*((value_type*) (store_.replacements_ + 4))</Item>
        </Expand>
      </Synthetic>
    </Expand>
  </Type>
</AutoVisualizer>
